---
- name: Get current state via unbound control
  command: unbound-control status
  register: _unbound_status
  changed_when: false
  failed_when: false

- include: dist_vars.yml

- include: install.yml

- name: Download root.hints file
  get_url:
    url: http://www.internic.net/domain/named.root
    dest: /var/lib/unbound
  notify: restart unbound

- name: Configure unbound.conf
  template:
    src: unbound.conf.j2
    dest: "{{ unbound_conf_path }}"
  notify: restart unbound

- name: Check if unbound_server.key is present
  stat:
    path: "{{ unbound_directory }}/unbound_server.key"
  register: unbound_remote_keys
  
- name: Setup certificates
  command: unbound-control-setup
  when: |
    unbound_control_enable == "yes" and not unbound_remote_keys.stat.exists

- include: root_anchor.yml
  when: unbound_auto_trust_anchor_file|default(false)

- include: dot.yml
  when: unbound_dot_server|default(false)

- name: Disable all local resolvers
  systemd:
    name: "{{ item }}"
    enabled: no
    state: stopped
  loop: "{{ resolv_pkg_to_disable }}"
  ignore_errors: true

- name: Remove all local resolvers
  apt:
    pkg: "{{ resolv_pkg_to_remove }}"
    state: absent

- name: "Configure resolv.conf"
  template:
    src: "resolv.conf.j2"
    dest: "/etc/resolv.conf"
    mode: "0644"
  become: True

- name: "Disable obtaining DNS servers via DHCP/NM"
  local_action: stat path=/etc/NetworkManager
  register: NM

- name: "Disable obtaining DNS servers via DHCP/NM"
  template:
    src: "dns.conf.j2"
    dest: "/etc/NetworkManager/conf.d/dns.conf"
    mode: "0644"
  become: True
  when: NM.stat.exists
  ignore_errors: true

- name: "Disable obtaining DNS servers via DHCP/NM"  
  ansible.builtin.file:
    path: /etc/dhcp/dhclient-enter-hooks.d/resolvconf
    state: absent

# Cannot move this part as the `verify` component of the previous task, because
# unbound-checkconf fails if the file is outside {{ unbound_directory }}
- name: Check unbound.conf
  command: unbound-checkconf "{{ unbound_conf_path }}"
  changed_when: false

- name: Enable unbound service
  service:
    name: "{{ unbound_service_name }}"
    state: started
    enabled: true
  when: unbound_enable_service

